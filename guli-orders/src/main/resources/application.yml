
# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 9899

spring:
#  profiles:
#    active: dev
  rabbitmq:
    # RabbitMQ服务器主机地址
    host: 192.168.56.10
    port: 5672
    # 默认虚拟主机为 / ，通过路径区分
    virtual-host: /
    # 开启发送端到broker的确认回调
    publisher-confirms: true
    # 开启broker内队列抵达的确认
    publisher-returns: true
    # 当消息投递失败，优先以异步的方式调用ReturnCallback，为false时则直接丢弃消息
    template:
      mandatory: true
    # 开启手动ack回执
    listener:
      simple:
        acknowledge-mode: manual
  application:
    name: guli-orders
  kafka:
    # kafka集群地址
    bootstrap-servers: 192.168.56.10:9092, 192.168.56.11:9092, 192.168.56.12:9092
    # 生产者key、value序列化器
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    # 消费者key、value反序列化器，消费者组id
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: guli-orders
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://192.168.56.10:3306/guli_oms?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
      username: root
      password: qskpzm18
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      #Oracle需要打开注释
      #validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        #login-username: admin
        #login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

# mybatis
mybatis-plus:
  # 配置mapper文件的位置
  mapper-locations: classpath*:/mapper.orders/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.guli.orders.entity
  global-config:
    #数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID", ASSIGN_ID:"雪花算法ID";
      id-type: ASSIGN_ID
      # 逻辑删除字段
      logic-delete-field: valid
      # 逻辑删除合法值
      logic-delete-value: 0
      logic-not-delete-value: 1
      # 驼峰转换
      column-underline: true
    banner: false
  #原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    # 打印输出SQL语句
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# rabbitmq
rabbitmq:
  x-message-ttl: 60000 # 消息存活时间，单位为毫秒
  x-dead-letter-exchange: order-service-exchange # 死信路由
  x-dead-letter-routing-key: order.release # 死信队列路由键
  x-queue-mode: default # 设置队列模式，default是普通队列，lazy为惰性队列
